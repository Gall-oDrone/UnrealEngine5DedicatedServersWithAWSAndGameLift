{
    "schemaVersion": "2.2",
    "description": "Download NVIDIA GRID driver from AWS S3 bucket",
    "parameters": {
        "region": {
            "type": "String",
            "description": "AWS region",
            "default": "us-east-1"
        }
    },
    "mainSteps": [
        {
            "action": "aws:runPowerShellScript",
            "name": "downloadNvidiaGridDriver",
            "inputs": {
                "timeoutSeconds": "1800",
                "runCommand": [
                    "# Download NVIDIA GRID Driver Script",
                    "",
                    "# Get parameters from SSM",
                    "$Region = '{{ region }}'",
                    "",
                    "# Set up logging",
                    "$LogDir = \"C:\\logs\"",
                    "if (!(Test-Path $LogDir)) {",
                    "    New-Item -ItemType Directory -Path $LogDir -Force | Out-Null",
                    "}",
                    "",
                    "$LogFile = \"$LogDir\\nvidia-grid-download-$(Get-Date -Format 'yyyyMMdd-HHmmss').log\"",
                    "",
                    "function Write-Log {",
                    "    param([string]$Message, [string]$Level = \"INFO\")",
                    "    $Timestamp = Get-Date -Format \"yyyy-MM-dd HH:mm:ss\"",
                    "    $LogEntry = \"[$Timestamp] [$Level] $Message\"",
                    "    Write-Host $LogEntry",
                    "    Add-Content -Path $LogFile -Value $LogEntry",
                    "}",
                    "",
                    "# Debug: Print all parameter values",
                    "Write-Log \"========================================\" \"INFO\"",
                    "Write-Log \"NVIDIA GRID Driver Download Session\" \"INFO\"",
                    "Write-Log \"========================================\" \"INFO\"",
                    "Write-Log \"Region: $Region\" \"INFO\"",
                    "",
                    "# Test AWS CLI availability",
                    "Write-Log \"Testing AWS CLI...\" \"INFO\"",
                    "try {",
                    "    $awsVersion = & \"C:\\Program Files\\Amazon\\AWSCLIV2\\aws.exe\" --version 2>&1",
                    "    Write-Log \"AWS CLI available: $awsVersion\" \"SUCCESS\"",
                    "} catch {",
                    "    Write-Log \"AWS CLI not available: $_\" \"ERROR\"",
                    "    exit 1",
                    "}",
                    "",
                    "# Test AWS credentials",
                    "Write-Log \"Testing AWS credentials...\" \"INFO\"",
                    "try {",
                    "    $callerIdentity = & \"C:\\Program Files\\Amazon\\AWSCLIV2\\aws.exe\" sts get-caller-identity --region $Region 2>&1",
                    "    if ($LASTEXITCODE -eq 0) {",
                    "        Write-Log \"AWS credentials valid: $callerIdentity\" \"SUCCESS\"",
                    "    } else {",
                    "        Write-Log \"AWS credentials invalid: $callerIdentity\" \"ERROR\"",
                    "        exit 1",
                    "    }",
                    "} catch {",
                    "    Write-Log \"Failed to verify AWS credentials: $_\" \"ERROR\"",
                    "    exit 1",
                    "}",
                    "",
                    "# Set up download parameters",
                    "$Bucket = \"ec2-windows-nvidia-drivers\"",
                    "$KeyPrefix = \"latest\"",
                    "$LocalPath = \"$home\\Desktop\\NVIDIA\"",
                    "",
                    "Write-Log \"Download Configuration:\" \"INFO\"",
                    "Write-Log \"  Bucket: $Bucket\" \"INFO\"",
                    "Write-Log \"  Key Prefix: $KeyPrefix\" \"INFO\"",
                    "Write-Log \"  Local Path: $LocalPath\" \"INFO\"",
                    "Write-Log \"  Region: $Region\" \"INFO\"",
                    "",
                    "# Create local directory",
                    "Write-Log \"Creating local directory: $LocalPath\" \"INFO\"",
                    "if (!(Test-Path $LocalPath)) {",
                    "    New-Item -ItemType Directory -Path $LocalPath -Force | Out-Null",
                    "    Write-Log \"Directory created successfully\" \"SUCCESS\"",
                    "} else {",
                    "    Write-Log \"Directory already exists\" \"INFO\"",
                    "}",
                    "",
                    "# Download NVIDIA GRID driver files",
                    "Write-Log \"Starting NVIDIA GRID driver download...\" \"INFO\"",
                    "try {",
                    "    $Objects = Get-S3Object -BucketName $Bucket -KeyPrefix $KeyPrefix -Region $Region",
                    "    Write-Log \"Found $($Objects.Count) objects in S3 bucket\" \"INFO\"",
                    "    ",
                    "    $DownloadCount = 0",
                    "    $TotalSize = 0",
                    "    ",
                    "    foreach ($Object in $Objects) {",
                    "        $LocalFileName = $Object.Key",
                    "        if ($LocalFileName -ne '' -and $Object.Size -ne 0) {",
                    "            $LocalFilePath = Join-Path $LocalPath $LocalFileName",
                    "            $SizeMB = [math]::Round($Object.Size / 1MB, 2)",
                    "            ",
                    "            Write-Log \"Downloading: $LocalFileName (${SizeMB}MB)\" \"INFO\"",
                    "            ",
                    "            try {",
                    "                Copy-S3Object -BucketName $Bucket -Key $Object.Key -LocalFile $LocalFilePath -Region $Region",
                    "                if (Test-Path $LocalFilePath) {",
                    "                    $LocalFileInfo = Get-Item $LocalFilePath",
                    "                    $LocalSizeMB = [math]::Round($LocalFileInfo.Length / 1MB, 2)",
                    "                    ",
                    "                    Write-Log \"✅ Downloaded: $LocalFileName (${LocalSizeMB}MB)\" \"SUCCESS\"",
                    "                    $DownloadCount++",
                    "                    $TotalSize += $LocalFileInfo.Length",
                    "                } else {",
                    "                    Write-Log \"❌ Download failed: $LocalFileName\" \"ERROR\"",
                    "                }",
                    "            } catch {",
                    "                Write-Log \"❌ Error downloading $LocalFileName : $_\" \"ERROR\"",
                    "            }",
                    "        }",
                    "    }",
                    "    ",
                    "    $TotalSizeMB = [math]::Round($TotalSize / 1MB, 2)",
                    "    Write-Log \"\" \"INFO\"",
                    "    Write-Log \"========================================\" \"INFO\"",
                    "    Write-Log \"Download Summary\" \"INFO\"",
                    "    Write-Log \"========================================\" \"INFO\"",
                    "    Write-Log \"Files downloaded: $DownloadCount\" \"INFO\"",
                    "Write-Log \"Total size: ${TotalSizeMB}MB\" \"INFO\"",
                    "Write-Log \"Download location: $LocalPath\" \"INFO\"",
                    "",
                    "    if ($DownloadCount -gt 0) {",
                    "        Write-Log \"✅ NVIDIA GRID driver download completed successfully!\" \"SUCCESS\"",
                    "        Write-Log \"Please check the files in: $LocalPath\" \"INFO\"",
                    "        exit 0",
                    "    } else {",
                    "        Write-Log \"❌ No files were downloaded\" \"ERROR\"",
                    "        exit 1",
                    "    }",
                    "    ",
                    "} catch {",
                    "    Write-Log \"❌ Failed to download NVIDIA GRID driver: $_\" \"ERROR\"",
                    "    exit 1",
                    "}"
                ]
            }
        }
    ]
}