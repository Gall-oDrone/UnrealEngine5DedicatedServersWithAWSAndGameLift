{
    "schemaVersion": "2.2",
    "description": "Test downloading CMake from S3 using access point",
    "parameters": {
        "bucketArn": {
            "type": "String",
            "description": "S3 access point ARN for the bucket",
            "allowedPattern": "^arn:aws:s3:[a-z0-9-]+:[0-9]+:accesspoint/[a-zA-Z0-9-]+$"
        },
        "objectKey": {
            "type": "String",
            "description": "S3 object key (path) to the CMake installer",
            "allowedPattern": "^[a-zA-Z0-9!_.*'()/\\-\\s]+$"
        },
        "region": {
            "type": "String",
            "description": "AWS region",
            "default": "us-east-1",
            "allowedPattern": "^[a-z0-9-]+$"
        }
    },
    "mainSteps": [
        {
            "action": "aws:runPowerShellScript",
            "name": "testCMakeDownload",
            "inputs": {
                "timeoutSeconds": "300",
                "runCommand": [
                    "# Test CMake Download Script",
                    "param(",
                    "    [string]$BucketArn = '{{ bucketArn }}',",
                    "    [string]$ObjectKey = '{{ objectKey }}',",
                    "    [string]$Region = '{{ region }}'",
                    ")",
                    "",
                    "# Set up logging",
                    "$LogDir = 'C:\\logs'",
                    "if (!(Test-Path $LogDir)) {",
                    "    New-Item -ItemType Directory -Path $LogDir -Force | Out-Null",
                    "}",
                    "",
                    "$LogFile = \"$LogDir\\test-cmake-download.log\"",
                    "",
                    "function Write-Log {",
                    "    param([string]$Message, [string]$Level = 'INFO')",
                    "    $LogTimestamp = Get-Date -Format 'yyyy-MM-dd HH:mm:ss'",
                    "    $LogEntry = \"[$LogTimestamp] [$Level] $Message\"",
                    "    Write-Host $LogEntry",
                    "    Add-Content -Path $LogFile -Value $LogEntry",
                    "}",
                    "",
                    "Write-Log \"Starting CMake download test\" \"INFO\"",
                    "Write-Log \"Bucket ARN: $BucketArn\" \"INFO\"",
                    "Write-Log \"Object Key: $ObjectKey\" \"INFO\"",
                    "Write-Log \"Region: $Region\" \"INFO\"",
                    "",
                    "# Extract filename from S3 key",
                    "$FileName = Split-Path $ObjectKey -Leaf",
                    "$DownloadDir = 'C:\\downloads'",
                    "$LocalPath = \"$DownloadDir\\$FileName\"",
                    "",
                    "# Create download directory",
                    "try {",
                    "    if (!(Test-Path $DownloadDir)) {",
                    "        New-Item -ItemType Directory -Path $DownloadDir -Force | Out-Null",
                    "        Write-Log \"Created download directory: $DownloadDir\" \"INFO\"",
                    "    }",
                    "} catch {",
                    "    Write-Log \"Failed to create download directory: $($_.Exception.Message)\" \"ERROR\"",
                    "    exit 1",
                    "}",
                    "",
                    "# Test AWS CLI availability",
                    "Write-Log \"Checking AWS CLI availability...\" \"INFO\"",
                    "try {",
                    "    $awsVersion = aws --version 2>&1",
                    "    Write-Log \"AWS CLI version: $awsVersion\" \"INFO\"",
                    "} catch {",
                    "    Write-Log \"AWS CLI not available: $($_.Exception.Message)\" \"ERROR\"",
                    "    exit 1",
                    "}",
                    "",
                    "# Test AWS credentials",
                    "Write-Log \"Testing AWS credentials...\" \"INFO\"",
                    "try {",
                    "    $callerIdentity = aws sts get-caller-identity --region $Region 2>&1",
                    "    Write-Log \"AWS credentials valid: $callerIdentity\" \"INFO\"",
                    "} catch {",
                    "    Write-Log \"AWS credentials test failed: $($_.Exception.Message)\" \"ERROR\"",
                    "    exit 1",
                    "}",
                    "",
                    "# Download CMake from S3 using access point",
                    "Write-Log \"Downloading CMake from S3 using access point...\" \"INFO\"",
                    "try {",
                    "    $awsCommand = \"aws s3api get-object --bucket `\"$BucketArn`\" --key `\"$ObjectKey`\" `\"$LocalPath`\" --region `\"$Region`\"\"",
                    "    Write-Log \"Executing: $awsCommand\" \"INFO\"",
                    "    ",
                    "    Invoke-Expression $awsCommand",
                    "    ",
                    "    if ($LASTEXITCODE -eq 0 -and (Test-Path $LocalPath)) {",
                    "        $FileSize = [math]::Round((Get-Item $LocalPath).Length / 1MB, 2)",
                    "        Write-Log \"Download completed successfully: $LocalPath ($FileSize MB)\" \"SUCCESS\"",
                    "        ",
                    "        # Verify file properties",
                    "        $FileInfo = Get-ItemProperty $LocalPath",
                    "        Write-Log \"File name: $($FileInfo.Name)\" \"INFO\"",
                    "        Write-Log \"File size: $($FileInfo.Length) bytes\" \"INFO\"",
                    "        Write-Log \"File extension: $($FileInfo.Extension)\" \"INFO\"",
                    "        Write-Log \"File created: $($FileInfo.CreationTime)\" \"INFO\"",
                    "        Write-Log \"File modified: $($FileInfo.LastWriteTime)\" \"INFO\"",
                    "        ",
                    "        # Keep the file for inspection (don't delete)",
                    "        Write-Log \"File kept for inspection: $LocalPath\" \"INFO\"",
                    "        ",
                    "        $ExitStatus = 0",
                    "    } else {",
                    "        Write-Log \"Download failed - file not found or command failed\" \"ERROR\"",
                    "        Write-Log \"Last exit code: $LASTEXITCODE\" \"ERROR\"",
                    "        $ExitStatus = 1",
                    "    }",
                    "} catch {",
                    "    Write-Log \"Download error: $($_.Exception.Message)\" \"ERROR\"",
                    "    $ExitStatus = 1",
                    "}",
                    "",
                    "Write-Log \"CMake download test completed\" \"INFO\"",
                    "Write-Log \"Exit status: $ExitStatus\" \"INFO\"",
                    "exit $ExitStatus"
                ]
            }
        }
    ]
}